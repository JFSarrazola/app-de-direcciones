{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\html_course\\\\rutes app\\\\my-app\\\\src\\\\components\\\\createRuteFolder\\\\newRuteComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewRuteComponent = ({\n  setRutesList,\n  rutesList\n}) => {\n  _s();\n  const [inputsClient, setInputsClient] = useState({});\n  const [directionType, setDirectionType] = useState('CRR');\n  const onChangeClientData = ({\n    target\n  }) => {\n    switch (target.id) {\n      case 'direcType':\n        setInputsClient({\n          ...inputsClient,\n          direcType: target.value\n        });\n        break;\n      case 'num':\n        setInputsClient({\n          ...inputsClient,\n          num: target.value\n        });\n        break;\n      case 'optionalData':\n        setInputsClient({\n          ...inputsClient,\n          otherClientData: {\n            directionComplement: target.value\n          }\n        });\n        break;\n      case 'phone':\n        setInputsClient({\n          ...inputsClient,\n          phone: target.value\n        });\n        break;\n      case 'clientname':\n        setInputsClient({\n          ...inputsClient,\n          clientName: target.value\n        });\n        break;\n    }\n  };\n  const cleanInputs = () => {\n    document.querySelector('#direcType').value = '';\n    document.querySelector('#num').value = '';\n    document.querySelector('#phone').value = '';\n    document.querySelector('#clientname').value = '';\n    document.querySelector('#optionalData').value = '';\n  };\n  const onSubmitAddClient = e => {\n    e.preventDefault();\n    const generateId = Math.floor(Math.random() * 1000);\n    setRutesList([...rutesList, {\n      //la propiedad directionRute concatena las propiedades direcType y num del estado inputClient\n      //la propiedad num antes de concatenarse verifica si comienza con el simbolo #, si no lo tiene lo agrega\n\n      directionRute: `${directionType} ${inputsClient.direcType} ${!inputsClient.num.startsWith('#') ? '#' + inputsClient.num : inputsClient.num}`,\n      clName: inputsClient.clientName,\n      phone: inputsClient.phone,\n      otherData: inputsClient.otherClientData,\n      id: generateId\n    }]);\n    cleanInputs();\n    setInputsClient({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => onSubmitAddClient(e),\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"options\",\n        onChange: e => setDirectionType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CRR\",\n          children: \" Carrera \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CLL\",\n          children: \" Calle \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"CQ\",\n          children: \" Circular \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DG\",\n          children: \" Diagonal \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TV\",\n          children: \" Transversal \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: directionType,\n        onChange: onChangeClientData,\n        id: \"direcType\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Num\",\n        onChange: onChangeClientData,\n        id: \"num\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Int, Ap, Piso etc... (opcional)\",\n        onChange: onChangeClientData,\n        id: \"optionalData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Tel\\xE9fono del cliente\",\n      onChange: onChangeClientData,\n      id: \"phone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nombre del cliente\",\n      onChange: onChangeClientData,\n      id: \"clientname\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Agregar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(NewRuteComponent, \"dP817sORCjT/mr7Y8Y+tK9MG6wA=\");\n_c = NewRuteComponent;\nvar _c;\n$RefreshReg$(_c, \"NewRuteComponent\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NewRuteComponent","setRutesList","rutesList","_s","inputsClient","setInputsClient","directionType","setDirectionType","onChangeClientData","target","id","direcType","value","num","otherClientData","directionComplement","phone","clientName","cleanInputs","document","querySelector","onSubmitAddClient","e","preventDefault","generateId","Math","floor","random","directionRute","startsWith","clName","otherData","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/html_course/rutes app/my-app/src/components/createRuteFolder/newRuteComponent.jsx"],"sourcesContent":["import { useState } from 'react'\r\n\r\n\r\nexport const NewRuteComponent = ( { setRutesList, rutesList } ) => {\r\n\r\n    const [ inputsClient, setInputsClient ] = useState({});\r\n\r\n    const [ directionType, setDirectionType ] = useState('CRR');\r\n\r\n    \r\n    const onChangeClientData =  ( { target } )=>{\r\n\r\n        switch(target.id){\r\n\r\n            case 'direcType' : setInputsClient({...inputsClient, direcType : target.value});break;\r\n\r\n            case 'num' : setInputsClient({...inputsClient, num : target.value });break;\r\n\r\n            case 'optionalData': setInputsClient({...inputsClient, otherClientData:{ directionComplement : target.value } }) ;break;\r\n\r\n            case 'phone' : setInputsClient({...inputsClient, phone : target.value});break;\r\n\r\n            case 'clientname' : setInputsClient({...inputsClient, clientName : target.value});break;\r\n\r\n        }\r\n\r\n\r\n    };\r\n\r\n    const cleanInputs = ()=>{\r\n\r\n        document.querySelector('#direcType').value = '';\r\n\r\n        document.querySelector('#num').value = '';\r\n\r\n        document.querySelector('#phone').value = '';\r\n        \r\n        document.querySelector('#clientname').value = '';\r\n\r\n        document.querySelector('#optionalData').value = '';\r\n       \r\n    };\r\n\r\n    const onSubmitAddClient = ( e )=>{\r\n\r\n        e.preventDefault();\r\n\r\n        const generateId = Math.floor(Math.random()*1000);\r\n\r\n    \r\n        setRutesList([...rutesList,{\r\n\r\n            //la propiedad directionRute concatena las propiedades direcType y num del estado inputClient\r\n            //la propiedad num antes de concatenarse verifica si comienza con el simbolo #, si no lo tiene lo agrega\r\n\r\n            directionRute: `${directionType} ${ inputsClient.direcType} ${!inputsClient.num.startsWith('#')? '#'+ inputsClient.num :\r\n                            inputsClient.num}`,\r\n            clName: inputsClient.clientName,\r\n            phone: inputsClient.phone,\r\n            otherData : inputsClient.otherClientData,\r\n            id:  generateId,\r\n\r\n        } ])\r\n\r\n        cleanInputs()\r\n        setInputsClient({})\r\n\r\n    };\r\n\r\n  return (\r\n\r\n    <form onSubmit = { (e)=> onSubmitAddClient(e)}>\r\n\r\n        <section>\r\n\r\n            <label htmlFor = 'options' ></label>\r\n\r\n            <select id ='options' onChange = { (e)=> setDirectionType(e.target.value) }>\r\n\r\n                <option value='CRR'> Carrera </option>\r\n                <option value='CLL'> Calle </option>\r\n                <option value='CQ'> Circular </option>\r\n                <option value='DG'> Diagonal </option>\r\n                <option value='TV'> Transversal </option>\r\n\r\n            </select>\r\n\r\n            <input type='text' placeholder = { directionType } onChange = { onChangeClientData } id='direcType' required/>\r\n\r\n            <input type='text' placeholder='Num' onChange = { onChangeClientData } id='num' required/> \r\n\r\n            <input  type='text' placeholder='Int, Ap, Piso etc... (opcional)' \r\n                    onChange={ onChangeClientData } id='optionalData'/>\r\n\r\n        </section>\r\n\r\n        <input type='text' placeholder='Teléfono del cliente' onChange = { onChangeClientData } id='phone' />\r\n\r\n        <input type='text' placeholder='Nombre del cliente' onChange = { onChangeClientData } id='clientname'/>\r\n\r\n        <button> Agregar </button>\r\n\r\n    </form>\r\n\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}