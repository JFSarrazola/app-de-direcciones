{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\html_course\\\\rutes app\\\\my-app\\\\src\\\\components\\\\cardListFolder\\\\cardListComponent.jsx\",\n  _s = $RefreshSig$();\nimport { ClientCardData } from './clientCardData';\nimport { ClientCardOptions } from './clientCardOptions';\nimport { FilterBoxComponent } from '../filtersFolder/FilterBoxComponent';\nimport './directionListStyles/clientCardContainerStyle.css';\nimport { useContext } from 'react';\nimport { MyContext } from '../../context/myContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CardListComponent = ({\n  setShowMore\n}) => {\n  _s();\n  //Este componente se encarga de dibujar una lista con las direcci贸nes que el usuario ingresa\n  //ClientCardData muestra los datos que se ingresaron, ClientCardOptions contiene dos botones con los que se puede interactuar con cada elemento\n  // FilterBoxComponent se encarga de crear un componente el cual manipula el orden de la lista de direcci贸nes (mayor a menor | menor a mayor)\n\n  const {\n    routesList,\n    setRoutesList,\n    routesCompleted,\n    setRoutesCompleted,\n    routesTrashed,\n    setRoutesTrashed,\n    setCurrentClientData\n  } = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FilterBoxComponent, {\n      routesList: routesList,\n      setRoutesList: setRoutesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cardsListContainer\",\n      children: routesList.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clientCard\",\n        children: [/*#__PURE__*/_jsxDEV(ClientCardData, {\n          clientData: e,\n          setCurrentClientData: setCurrentClientData,\n          setShowMore: setShowMore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ClientCardOptions, {\n          clientData: e,\n          setRoutesList: setRoutesList,\n          routesList: routesList,\n          routesCompleted: routesCompleted,\n          setRoutesCompleted: setRoutesCompleted,\n          routesTrashed: routesTrashed,\n          setRoutesTrashed: setRoutesTrashed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, e.idClient, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CardListComponent, \"LmajDg9cTv3sNtZ7KtBMZYs3Cx4=\");\n_c = CardListComponent;\nvar _c;\n$RefreshReg$(_c, \"CardListComponent\");","map":{"version":3,"names":["ClientCardData","ClientCardOptions","FilterBoxComponent","useContext","MyContext","jsxDEV","_jsxDEV","Fragment","_Fragment","CardListComponent","setShowMore","_s","routesList","setRoutesList","routesCompleted","setRoutesCompleted","routesTrashed","setRoutesTrashed","setCurrentClientData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","e","clientData","idClient","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/html_course/rutes app/my-app/src/components/cardListFolder/cardListComponent.jsx"],"sourcesContent":["import { ClientCardData } from './clientCardData';\r\nimport { ClientCardOptions } from './clientCardOptions';\r\nimport { FilterBoxComponent } from '../filtersFolder/FilterBoxComponent';\r\n\r\n\r\nimport './directionListStyles/clientCardContainerStyle.css';\r\nimport { useContext } from 'react';\r\nimport { MyContext } from '../../context/myContext';\r\n\r\n\r\n\r\nexport const CardListComponent = ({setShowMore}) => {\r\n\r\n//Este componente se encarga de dibujar una lista con las direcci贸nes que el usuario ingresa\r\n//ClientCardData muestra los datos que se ingresaron, ClientCardOptions contiene dos botones con los que se puede interactuar con cada elemento\r\n// FilterBoxComponent se encarga de crear un componente el cual manipula el orden de la lista de direcci贸nes (mayor a menor | menor a mayor)\r\n\r\n  const { routesList, setRoutesList, \r\n    routesCompleted, setRoutesCompleted, \r\n    routesTrashed, setRoutesTrashed,\r\n    setCurrentClientData} = useContext(MyContext)\r\n\r\n  return (\r\n    <>\r\n\r\n      <FilterBoxComponent routesList = { routesList }  setRoutesList = { setRoutesList } />\r\n\r\n      <section className = 'cardsListContainer'>\r\n\r\n        { routesList.map( (e)=>\r\n        \r\n      \r\n          <div key = { e.idClient } className='clientCard'>\r\n\r\n            <ClientCardData clientData = { e }\r\n                            setCurrentClientData = { setCurrentClientData }\r\n                            setShowMore = { setShowMore }/>\r\n\r\n            <ClientCardOptions  clientData = { e } \r\n                                setRoutesList = { setRoutesList } \r\n                                routesList = { routesList }\r\n                                routesCompleted = { routesCompleted }\r\n                                setRoutesCompleted = { setRoutesCompleted }\r\n                                routesTrashed = { routesTrashed }\r\n                                setRoutesTrashed = { setRoutesTrashed }/>\r\n          </div>\r\n        )}\r\n\r\n      </section>\r\n    </>\r\n   \r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,kBAAkB,QAAQ,qCAAqC;AAGxE,OAAO,oDAAoD;AAC3D,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIpD,OAAO,MAAMC,iBAAiB,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAEpD;EACA;EACA;;EAEE,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAC/BC,eAAe;IAAEC,kBAAkB;IACnCC,aAAa;IAAEC,gBAAgB;IAC/BC;EAAoB,CAAC,GAAGf,UAAU,CAACC,SAAS,CAAC;EAE/C,oBACEE,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBAEEb,OAAA,CAACJ,kBAAkB;MAACU,UAAU,EAAKA,UAAY;MAAEC,aAAa,EAAKA;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErFjB,OAAA;MAASkB,SAAS,EAAG,oBAAoB;MAAAL,QAAA,EAErCP,UAAU,CAACa,GAAG,CAAGC,CAAC,iBAGlBpB,OAAA;QAA0BkB,SAAS,EAAC,YAAY;QAAAL,QAAA,gBAE9Cb,OAAA,CAACN,cAAc;UAAC2B,UAAU,EAAKD,CAAG;UAClBR,oBAAoB,EAAKA,oBAAsB;UAC/CR,WAAW,EAAKA;QAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAE/CjB,OAAA,CAACL,iBAAiB;UAAE0B,UAAU,EAAKD,CAAG;UAClBb,aAAa,EAAKA,aAAe;UACjCD,UAAU,EAAKA,UAAY;UAC3BE,eAAe,EAAKA,eAAiB;UACrCC,kBAAkB,EAAKA,kBAAoB;UAC3CC,aAAa,EAAKA,aAAe;UACjCC,gBAAgB,EAAKA;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA,GAZlDG,CAAC,CAACE,QAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAalB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEM,CAAC;EAAA,eACV,CAAC;AAGP,CAAC;AAAAZ,EAAA,CAzCYF,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}