{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\html_course\\\\rutes app\\\\my-app\\\\src\\\\context\\\\myProvider.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MyContext } from './myContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyProvider = ({\n  children\n}) => {\n  _s();\n  const [routesList, setRoutesList] = useState(routeList()); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\n\n  const [routesCompleted, setRoutesCompleted] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\n\n  const [routesTrashed, setRoutesTrashed] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\n\n  const [currentClientData, setCurrentClientData] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\n\n  const [showMore, setShowMore] = useState(false); //este estado varia entre true y false para crear el componente que mostará la info adicional que da currentClientData \n\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: [routesList, setRoutesList, routesCompleted, setRoutesCompleted, routesTrashed, setRoutesTrashed, currentClientData, setCurrentClientData, showMore, setShowMore],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(MyProvider, \"CyQfJHgRHBuU/aRCvAWd/mRoupw=\");\n_c = MyProvider;\nvar _c;\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["React","MyContext","jsxDEV","_jsxDEV","MyProvider","children","_s","routesList","setRoutesList","useState","routeList","routesCompleted","setRoutesCompleted","routesTrashed","setRoutesTrashed","currentClientData","setCurrentClientData","showMore","setShowMore","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/html_course/rutes app/my-app/src/context/myProvider.jsx"],"sourcesContent":["import React from 'react'\r\nimport { MyContext } from './myContext'\r\n\r\nexport const MyProvider = ( {children} ) => {\r\n\r\n    const [ routesList , setRoutesList ] = useState( routeList() ); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\r\n\r\n    const [ routesCompleted, setRoutesCompleted ] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\r\n\r\n    const [ routesTrashed, setRoutesTrashed ] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\r\n\r\n\r\n    const [ currentClientData, setCurrentClientData ] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\r\n\r\n    const [ showMore, setShowMore ] = useState( false ); //este estado varia entre true y false para crear el componente que mostará la info adicional que da currentClientData \r\n\r\n\r\n    return (\r\n        \r\n        <MyContext.Provider  value = {[ routesList , setRoutesList,  routesCompleted, setRoutesCompleted,\r\n                                        routesTrashed, setRoutesTrashed , currentClientData, setCurrentClientData,\r\n                                        showMore, setShowMore          \r\n         ]}>\r\n\r\n            { children }\r\n            \r\n        </MyContext.Provider>\r\n\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,UAAU,GAAGA,CAAE;EAACC;AAAQ,CAAC,KAAM;EAAAC,EAAA;EAExC,MAAM,CAAEC,UAAU,EAAGC,aAAa,CAAE,GAAGC,QAAQ,CAAEC,SAAS,CAAC,CAAE,CAAC,CAAC,CAAC;;EAEhE,MAAM,CAAEC,eAAe,EAAEC,kBAAkB,CAAE,GAAGH,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9D,MAAM,CAAEI,aAAa,EAAEC,gBAAgB,CAAE,GAAGL,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAG1D,MAAM,CAAEM,iBAAiB,EAAEC,oBAAoB,CAAE,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAElE,MAAM,CAAEQ,QAAQ,EAAEC,WAAW,CAAE,GAAGT,QAAQ,CAAE,KAAM,CAAC,CAAC,CAAC;;EAGrD,oBAEIN,OAAA,CAACF,SAAS,CAACkB,QAAQ;IAAEC,KAAK,EAAI,CAAEb,UAAU,EAAGC,aAAa,EAAGG,eAAe,EAAEC,kBAAkB,EAChEC,aAAa,EAAEC,gBAAgB,EAAGC,iBAAiB,EAAEC,oBAAoB,EACzEC,QAAQ,EAAEC,WAAW,CAClD;IAAAb,QAAA,EAEGA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEM,CAAC;AAG7B,CAAC;AAAAlB,EAAA,CA1BYF,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}