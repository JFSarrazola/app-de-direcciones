{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\html_course\\\\rutes app\\\\my-app\\\\src\\\\data\\\\context\\\\myProvider.jsx\";\nimport React from 'react';\nimport { MyContext } from './myContext';\nimport { routeList } from '../routeList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [routesList, setRoutesList] = useState(routeList()); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\n\nconst [routesCompleted, setRoutesCompleted] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\n\nconst [routesTrashed, setRoutesTrashed] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\n\nconst [currentClientData, setCurrentClientData] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\n\nconst [showMore, setShowMore] = useState(false); //este estado varia entre true y false para crear el componente que mostará la info adicional que da currentClientData \n\nexport const MyProvider = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      routesList,\n      setRoutesList\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = MyProvider;\nvar _c;\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["React","MyContext","routeList","jsxDEV","_jsxDEV","routesList","setRoutesList","useState","routesCompleted","setRoutesCompleted","routesTrashed","setRoutesTrashed","currentClientData","setCurrentClientData","showMore","setShowMore","MyProvider","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/html_course/rutes app/my-app/src/data/context/myProvider.jsx"],"sourcesContent":["\r\nimport React from 'react';\r\nimport { MyContext } from './myContext';\r\nimport { routeList } from '../routeList';\r\n\r\n\r\n\r\nconst [ routesList , setRoutesList ] = useState( routeList() ); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\r\n\r\nconst [ routesCompleted, setRoutesCompleted ] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\r\n\r\nconst [ routesTrashed, setRoutesTrashed ] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\r\n\r\n\r\nconst [ currentClientData, setCurrentClientData ] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\r\n\r\nconst [ showMore, setShowMore ] = useState( false ); //este estado varia entre true y false para crear el componente que mostará la info adicional que da currentClientData \r\n\r\n\r\nexport const MyProvider = ({ children }) => {\r\n\r\n  return (\r\n\r\n    <MyContext.Provider value = { { routesList, setRoutesList} }> \r\n\r\n      { children }  \r\n      \r\n    </MyContext.Provider>\r\n\r\n  )\r\n   \r\n}\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIzC,MAAM,CAAEC,UAAU,EAAGC,aAAa,CAAE,GAAGC,QAAQ,CAAEL,SAAS,CAAC,CAAE,CAAC,CAAC,CAAC;;AAEhE,MAAM,CAAEM,eAAe,EAAEC,kBAAkB,CAAE,GAAGF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;AAE9D,MAAM,CAAEG,aAAa,EAAEC,gBAAgB,CAAE,GAAGJ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;AAG1D,MAAM,CAAEK,iBAAiB,EAAEC,oBAAoB,CAAE,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAElE,MAAM,CAAEO,QAAQ,EAAEC,WAAW,CAAE,GAAGR,QAAQ,CAAE,KAAM,CAAC,CAAC,CAAC;;AAGrD,OAAO,MAAMS,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAE1C,oBAEEb,OAAA,CAACH,SAAS,CAACiB,QAAQ;IAACC,KAAK,EAAK;MAAEd,UAAU;MAAEC;IAAa,CAAG;IAAAW,QAAA,EAExDA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAIzB,CAAC;AAAAC,EAAA,GAZYR,UAAU;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}