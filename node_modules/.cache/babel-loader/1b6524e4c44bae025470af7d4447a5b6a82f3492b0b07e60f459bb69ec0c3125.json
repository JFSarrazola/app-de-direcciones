{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\html_course\\\\rutes app\\\\my-app\\\\src\\\\data\\\\context\\\\myProvider.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MyContext } from './MyContext';\nimport { routeList } from '../routeList';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyProvider = ({\n  children\n}) => {\n  _s();\n  const [routesList, setRoutesList] = useState(routeList()); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\n\n  const [routesCompleted, setRoutesCompleted] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\n\n  const [routesTrashed, setRoutesTrashed] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\n\n  const [currentClientData, setCurrentClientData] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\n\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: [routesList, setRoutesList, routesCompleted, setRoutesCompleted, routesTrashed, setRoutesTrashed, currentClientData, setCurrentClientData, showMore, setShowMore],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MyProvider, \"kgdf4Na8Ek2ezNuomKgeZVScV94=\");\n_c = MyProvider;\nvar _c;\n$RefreshReg$(_c, \"MyProvider\");","map":{"version":3,"names":["React","MyContext","routeList","useState","jsxDEV","_jsxDEV","MyProvider","children","_s","routesList","setRoutesList","routesCompleted","setRoutesCompleted","routesTrashed","setRoutesTrashed","currentClientData","setCurrentClientData","Provider","value","showMore","setShowMore","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/html_course/rutes app/my-app/src/data/context/myProvider.jsx"],"sourcesContent":["\r\nimport React from 'react';\r\nimport { MyContext } from './MyContext';\r\nimport { routeList } from '../routeList';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport const MyProvider = ({ children }) => {\r\n\r\n  const [ routesList , setRoutesList ] = useState( routeList() ); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\r\n\r\n  const [ routesCompleted, setRoutesCompleted ] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\r\n\r\n  const [ routesTrashed, setRoutesTrashed ] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\r\n\r\n\r\n  const [ currentClientData, setCurrentClientData ] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n\r\n    <MyContext.Provider value = { [routesList, setRoutesList,routesCompleted, setRoutesCompleted, routesTrashed, setRoutesTrashed,\r\n                                    currentClientData, setCurrentClientData, showMore, setShowMore\r\n    ] }> \r\n\r\n      { children }  \r\n      \r\n    </MyContext.Provider>\r\n\r\n  )\r\n   \r\n}\r\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,OAAO,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE1C,MAAM,CAAEC,UAAU,EAAGC,aAAa,CAAE,GAAGP,QAAQ,CAAED,SAAS,CAAC,CAAE,CAAC,CAAC,CAAC;;EAEhE,MAAM,CAAES,eAAe,EAAEC,kBAAkB,CAAE,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9D,MAAM,CAAEU,aAAa,EAAEC,gBAAgB,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAG1D,MAAM,CAAEY,iBAAiB,EAAEC,oBAAoB,CAAE,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAMlE,oBAEEE,OAAA,CAACJ,SAAS,CAACgB,QAAQ;IAACC,KAAK,EAAK,CAACT,UAAU,EAAEC,aAAa,EAACC,eAAe,EAAEC,kBAAkB,EAAEC,aAAa,EAAEC,gBAAgB,EAC7FC,iBAAiB,EAAEC,oBAAoB,EAAEG,QAAQ,EAAEC,WAAW,CAC3F;IAAAb,QAAA,EAECA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEQ,CAAC;AAIzB,CAAC;AAAAhB,EAAA,CA3BYF,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}