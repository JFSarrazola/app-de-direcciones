{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\html_course\\\\rutes app\\\\my-app\\\\src\\\\components\\\\currentComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport { NavBar } from './navBarFolder/navBar';\nimport { routeList } from '../data/routeList';\nimport { NewRouteComponent } from './createRouteFolder/newRouteComponent';\nimport { CompletedRoutesComponent } from './completedRoutesFolder/completedRoutesComponent';\nimport { TrashedRoutes } from './routesTrashedFolder/TrashedRoutes';\nimport { MoreClientData } from './RouteListFolder/moreClientData';\nimport '../styles/homeStyle.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CurrentComponent = () => {\n  _s();\n  const [routesList, setRoutesList] = useState(routeList()); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\n\n  const [routesCompleted, setRoutesCompleted] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\n\n  const [routesTrashed, setRoutesTrashed] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\n\n  const [currentClientData, setCurrentClientData] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\n\n  const [showMore, setShowMore] = useState(false); //este estado varia entre true y false para crear el componente que mostará la info adicional que da currentClientData \n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"home\",\n        element: /*#__PURE__*/_jsxDEV(CardListComponent, {\n          routesList: routesList,\n          setRoutesList: setRoutesList,\n          routesCompleted: routesCompleted,\n          setRoutesCompleted: setRoutesCompleted,\n          routesTrashed: routesTrashed,\n          setRoutesTrashed: setRoutesTrashed,\n          setCurrentClientData: setCurrentClientData,\n          setShowMore: setShowMore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"newRoute\",\n        element: /*#__PURE__*/_jsxDEV(NewRouteComponent, {\n          setRoutesList: setRoutesList,\n          routesList: routesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"completed\",\n        element: /*#__PURE__*/_jsxDEV(CompletedRoutesComponent, {\n          routesCompleted: routesCompleted,\n          currentClientData: currentClientData,\n          setCurrentClientData: setCurrentClientData,\n          showMore: showMore,\n          setShowMore: setShowMore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"trash\",\n        element: /*#__PURE__*/_jsxDEV(TrashedRoutes, {\n          routesTrashed: routesTrashed,\n          setRoutesTrashed: setRoutesTrashed,\n          routesList: routesList,\n          setRoutesList: setRoutesList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), showMore ? /*#__PURE__*/_jsxDEV(MoreClientData, {\n      clientData: currentClientData,\n      setShowMore: setShowMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 16\n    }, this) : null]\n  }, void 0, true);\n};\n_s(CurrentComponent, \"CyQfJHgRHBuU/aRCvAWd/mRoupw=\");\n_c = CurrentComponent;\nvar _c;\n$RefreshReg$(_c, \"CurrentComponent\");","map":{"version":3,"names":["useState","Navigate","Route","Routes","NavBar","routeList","NewRouteComponent","CompletedRoutesComponent","TrashedRoutes","MoreClientData","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrentComponent","_s","routesList","setRoutesList","routesCompleted","setRoutesCompleted","routesTrashed","setRoutesTrashed","currentClientData","setCurrentClientData","showMore","setShowMore","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","CardListComponent","to","clientData","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/html_course/rutes app/my-app/src/components/currentComponent.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\nimport { NavBar } from './navBarFolder/navBar';\r\nimport { routeList } from '../data/routeList';\r\n\r\nimport { NewRouteComponent } from './createRouteFolder/newRouteComponent';\r\nimport { CompletedRoutesComponent } from './completedRoutesFolder/completedRoutesComponent';\r\nimport { TrashedRoutes } from './routesTrashedFolder/TrashedRoutes';\r\nimport { MoreClientData } from './RouteListFolder/moreClientData';\r\n\r\nimport '../styles/homeStyle.css';\r\n\r\n\r\nexport const CurrentComponent = () => {\r\n\r\n  const [ routesList , setRoutesList ] = useState( routeList() ); // routeList se refiere a la lista de rutas(direcciónes) que el usuario crea, estas direcciónes pueden tener más datos como telefono,nombre, correo etc\r\n\r\n  const [ routesCompleted, setRoutesCompleted ] = useState([]); // este estado contiene las direcciónes que el usuario marcó como completadas\r\n\r\n  const [ routesTrashed, setRoutesTrashed ] = useState([]); // este estado contiene las direcciónes que el usuario elimino, sirve como papelera\r\n\r\n\r\n  const [ currentClientData, setCurrentClientData ] = useState({}); //este estado se refiere a una unica dirección la cual se define con una interacción especifica del usuario ( dar click a un boton para mostrar más info sobre esa dirección )\r\n\r\n  const [ showMore, setShowMore ] = useState( false ); //este estado varia entre true y false para crear el componente que mostará la info adicional que da currentClientData \r\n\r\n    \r\n  return (\r\n    <>\r\n\r\n    <NavBar/>\r\n\r\n\r\n    <Routes>\r\n\r\n      <Route path = \"home\" element = { \r\n\r\n        <CardListComponent \r\n\r\n          routesList = { routesList } \r\n          setRoutesList = { setRoutesList }  \r\n\r\n          routesCompleted = { routesCompleted } \r\n          setRoutesCompleted = { setRoutesCompleted }\r\n\r\n          routesTrashed = { routesTrashed }\r\n          setRoutesTrashed = { setRoutesTrashed }\r\n\r\n          setCurrentClientData = { setCurrentClientData }\r\n\r\n          setShowMore = { setShowMore }/> }>\r\n\r\n      </Route>\r\n\r\n\r\n\r\n      <Route path = \"newRoute\" element = { \r\n\r\n        <NewRouteComponent    \r\n          setRoutesList = { setRoutesList } \r\n          routesList = { routesList }/> }>\r\n\r\n      </Route>\r\n\r\n\r\n\r\n      <Route path = \"completed\" element = { \r\n\r\n        <CompletedRoutesComponent \r\n          routesCompleted={ routesCompleted }\r\n          \r\n          currentClientData = { currentClientData }\r\n          setCurrentClientData = { setCurrentClientData }\r\n          \r\n          showMore = { showMore }\r\n          setShowMore = { setShowMore }/> }>\r\n\r\n      </Route>\r\n\r\n\r\n\r\n      <Route path = \"trash\" element = { \r\n\r\n        <TrashedRoutes \r\n          routesTrashed = {routesTrashed}\r\n          setRoutesTrashed = { setRoutesTrashed }\r\n          routesList = { routesList }\r\n          setRoutesList= {setRoutesList} /> }>\r\n\r\n      </Route>\r\n\r\n\r\n      <Route path = \"*\" element = { <Navigate to = \"home\" ></Navigate> }></Route>\r\n\r\n    </Routes>\r\n\r\n    { showMore?<MoreClientData clientData = { currentClientData }\r\n                                setShowMore = { setShowMore }/>:null}\r\n         \r\n    </>\r\n     \r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}